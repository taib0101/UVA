#include<bits/stdc++.h>
using namespace std;
struct ele
{
    int uu;
    int vv;
    int cc;
};
bool cmp (struct ele x,struct ele y)
{
    return x.cc < y.cc;
}
int find(int u,int *p)
{
    if(p[u] == u)
        return u;
    p[u] = find(p[u],p);
    return p[u];
}
//vector < pair < pair < int , int > , int > > vpp;
void Union(int u,int v,int c,int *p,int *r,int *sum)
{
    int ux = u;
    int vx = v;
    u = find(u,p);
    v = find(v,p);
    if(u != v)
    {
        if(r[u] > r[v])
            p[v] = u;
        else if(r[u] < r[v])
            p[u] = v;
        else
        {
            p[v] = u;
            r[u]++;
        }
        *sum += c;
    }
}
int main()
{
    // freopen("in.txt","r",stdin);
    // freopen("out.txt","w",stdout);
    int n;
    bool bl = 0;
    while(cin >> n)
    {
        if(bl)
            cout << endl;
        bl = 1;
        int sum = 0;
        struct ele ar[n+10];
        int p1[n+10], p2[n+10],r[n+10];
        for(int i = 1; i <= n; ++i)
            p1[i] = i, p2[i] = i;
        memset(r,0,sizeof(r));
        for(int i = 0; i < n-1; ++i)
        {
            int u, v, c;
            cin >> u >> v >> c;
            ar[i].uu = u;
            ar[i].vv = v;
            ar[i].cc = c;
        }
        sort(ar,ar+n-1,cmp);
        for(int i = 0; i < n-1; ++i)
        {
            int u = ar[i].uu;
            int v = ar[i].vv;
            int c = ar[i].cc;
            Union(u,v,c,p1,r,&sum);
            //printf("u = %d, v = %d, c = %d\n",u,v,c);
        }
        int k;
        cin >> k;
        memset(r,0,sizeof(r));
        for(int i = 0; i < k; ++i)
        {
            int u, v, c;
            cin >> u >> v >> c;
            ar[i].uu = u;
            ar[i].vv = v;
            ar[i].cc = c;
        }
        int m;
        cin >> m;
        for(int i = 0; i < m; ++i,++k)
        {
            int u, v, c;
            cin >> u >> v >> c;
            ar[k].uu = u;
            ar[k].vv = v;
            ar[k].cc = c;
        }
        int sum1 = 0;
        sort(ar,ar+k,cmp);
        for(int i = 0 ; i < k; ++i)
        {
            int u = ar[i].uu;
            int v = ar[i].vv;
            int c = ar[i].cc;
            Union(u,v,c,p2,r,&sum1);
            //printf("u = %d, v = %d, c = %d\n",u,v,c);
        }
        cout << sum << endl;
        cout << sum1 << endl;
        //cout << endl;
    }
    return 0;
}
