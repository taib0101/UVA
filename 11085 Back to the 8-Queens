#include<bits/stdc++.h>
using namespace std;
const int N = 10;
bool cboard[725][N][N];
int a;
bool safe(vector < pair < int,int > > pv,int r1, int c1)
{
    if(pv.size() == 0)
        return 1;
    for(int i = 0; i < pv.size(); ++i)
    {
        int r2 = pv[i].first;
        int c2 = pv[i].second;
        if(r1 == r2)
            return 0;
        if(c1 == c2)
            return 0;
        if(abs(r1-r2) == abs(c1-c2))
            return 0;
    }
    return 1;
}
void nqueen(int n, int col, vector < pair < int,int > > pv)
{
    if(col == n)
    {
        for(int i = 0; i < pv.size(); ++i)
        {
            int r = pv[i].first;
            int c = pv[i].second;
            cboard[a][r][c] = 1;
        }
        a++;
        return;
    }
    for(int i = 0; i < n; ++i)
    {
        if(safe(pv,i,col))
        {
            pv.push_back({i,col});
            nqueen(n,col+1,pv);
            pv.pop_back();
        }
    }
}
int main()
{
//    freopen("input.txt","r",stdin);
//    freopen("output.txt","w",stdout);
    int n, arr[10], ii = 1;
    a = 0;
    memset(cboard,0,sizeof(cboard));
    vector < pair < int, int > > pv;
    nqueen(8,0,pv);

    while(cin >> arr[0])
    {
        for(int i = 1; i <= 7; ++i)
            cin >> arr[i];
        int minn = 7, sm;
        for(int aa = 0; aa < 8; ++aa)
        {
            for(int i = 0; i < a; ++i)
            {
                sm = 0;
                if(cboard[i][arr[aa]-1][aa] == 1)
                {
                    for(int j = 0; j < 8; ++j)
                    {
                        if(cboard[i][arr[j]-1][j] == 0)
                            sm++;
                    }
                    minn = min(minn,sm);
                }
            }
        }
        printf("Case %d: %d\n",ii,minn);
        ii++;
    }
    return 0;
}
