#include<bits/stdc++.h>
using namespace std;
struct ele
{
    int uu;
    int vv;
    int cc;
};
bool cmp(struct ele x,struct ele y)
{
    return x.cc < y.cc;
}
int find(int u,int *p)
{
    if(p[u] == u)
        return u;
    p[u] = find(p[u],p);
    return p[u];
}
void Union(int u,int v,int c,int *p,int *r,int *sum,int a)
{
    if(c >= a)
        return;
    u = find(u,p);
    v = find(v,p);
    if(u != v)
    {
        if(r[u] > r[v])
            p[v] = u;
        else if(r[u] < r[v])
            p[u] = v;
        else
        {
            p[v] = u;
            r[u]++;
        }
        *sum += c;
    }
}
int main()
{
    // freopen("in.txt","r",stdin);
    // freopen("out.txt","w",stdout);
    int t;
    cin >> t;
    int ii = 1;
    while(t--)
    {
        int n, m, a;
        cin >> n >> m >> a;
        int x, y, c;
        struct ele ar[m+10];
        for(int i = 0; i < m; ++i)
        {
            cin >> x >> y >> c;
            ar[i] = {x,y,c};
        }
        sort(ar,ar+m,cmp);
        int p[n+10],r[n+10];
        for(int i = 1; i <= n; ++i)
            p[i] = i;
        memset(r,0,sizeof(r));
        int sum = 0;
        for(int i = 0; i < m; ++i)
            Union(ar[i].uu,ar[i].vv,ar[i].cc,p,r,&sum,a);
        int co = 0;
        //cout << "sum = " << sum << endl;
        for(int i = 1; i <= n; ++i)
        {
            if(p[i] == i)
                sum += a,co++;
        }
        printf("Case #%d: %d %d\n",ii,sum,co);
        ii++;
    }
    return 0;
}
