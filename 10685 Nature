#include<bits/stdc++.h>
using namespace std;
pair < string , string > make(string s)
{
    stringstream ss(s);
    string u, v;
    ss >> u >> v;
    return {u,v};
}
map < string ,string > mss;
string find(string u)
{
    if(mss[u] == u)
        return u;
    mss[u] = find(mss[u]);
    return mss[u];
}
void Union(string u,string v)
{
    u = find(u);
    v = find(v);
    if( u != v)
        mss[v] = u;
}
int main()
{
    // freopen("in.txt","r",stdin);
    // freopen("out.txt","w",stdout);
    int n, m;
    while(cin >> n >> m)
    {
        if(n == 0 && m == 0)
        {
           // cout << endl;
            break;
        } 
        string s;
        mss.clear();
        for(int i = 1; i <= n; ++i)
        {
            cin >> s;
            mss[s] = s;
        }
        getline(cin,s);
        m++;
        while(m--)
        {
            getline(cin,s);
            if(!s.empty())
            {
                pair < string , string > ps = make(s);
                string u = ps.first;
                string v = ps.second;
                Union(u,v);
            }
        }
        map < string , int > mi;
        int maxx = 0;
        for(auto it = mss.begin(); it != mss.end(); ++it)
        {
            string xx = find(it->first);
            mi[xx]++;
        }
        for(auto it = mss.begin(); it != mss.end(); ++it)
            maxx = max(maxx,mi[it->first]);
        cout << maxx << endl;
    }
    return 0;
}
