#include<bits/stdc++.h>
using namespace std;
const int N = 12;
bool vis[N][N];
int go(int i,int j,int n,int arr[N][N],int sum,int c,int ni)
{
    if(n == 1)
        return arr[i][j];
    if(vis[i][j])
        return sum;
    vis[i][j] = 1;
    sum += arr[i][j];
    if(i == ni && j == n)
        c = 1;
    else if(i == n && j == n)
        c = 2;
    else if(i == n && j == ni)
        c = 3;
    if(c == 0)
        return go(i,j+1,n,arr,sum,c,ni);
    else if(c == 1)
        return go(i+1,j,n,arr,sum,c,ni);
    else if(c == 2)
        return go(i,j-1,n,arr,sum,c,ni);
    else
        return go(i-1,j,n,arr,sum,c,ni);
}

vector < int > make(int i,int n,int a,int arr[N][N],vector < int > v)
{
    if(i == a+1)
        return v;

     v.push_back(go(i,i,n-i+1,arr,0,0,i));
    return make(i+1,n,a,arr,v);
}

int main()
{
    int n,c = 1;
    while(cin >> n && n)
    {
        int arr[N][N];
        for(int i = 1; i <= n; ++i)
        {
            for(int j = 1; j <= n; ++j)
                cin >> arr[i][j];
        }
        int a;
        if(n % 2 == 1)
            a = (n/2) + 1;
        else
            a = n / 2;
        memset(vis,0,sizeof(vis));
        vector < int > v;
        vector < int > vc = make(1,n,a,arr,v);
        printf("Case %d: ",c);
        for(int i = 0; i < vc.size(); ++i)
        {
            cout << vc[i];
            if(i != vc.size()-1)
                cout << " ";
        }
            
        cout << endl;
        c++;
    }
    return 0;
}
