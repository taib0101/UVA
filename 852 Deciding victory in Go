#include<bits/stdc++.h>
using namespace std;
bool vs[11][11], cheack[4];
int ans[4], sum;

void dfs(int x, int y,vector < string > g,int n,char c,int m)
{
    vs[x][y] = 1;
    int dx[] = {0,0,-1,1};
    int dy[] = {-1,1,0,0};
    sum++;
    for(int i = 0; i < 4; ++i)
    {
        int xx = x + dx[i];
        int yy = y + dy[i];
        if(xx >= 0 && yy >= 0 && xx < m && yy < n)
        {
            if(g[xx][yy] == c && !vs[xx][yy])
                dfs(xx,yy,g,n,c,m);
            else if(g[xx][yy] == 'X')
                cheack[1] = 1;
            else if(g[xx][yy] == 'O')
                cheack[0] = 1;
        }
    }
}

int main()
{
//    freopen("in.txt","r",stdin);
//    freopen("out.txt","w",stdout);
    string str;
    int t;
    cin >> t;

    while(t--)
    {
        vector < string > g;
        for(int i = 0; i < 9; ++i)
        {
            cin >> str;
            g.push_back(str);
        }

        int n = g[0].size();
        int m = g.size();
        memset(ans, 0, sizeof(ans));
        memset(vs, 0, sizeof(vs));

        for(int i = 0; i < g.size(); ++i)
        {
            for(int j = 0; j < g[i].size(); ++j)
            {
                int x = i, y = j;
                char c = g[i][j];
                if(!vs[x][y] && c == '.')
                {
                    cheack[0] = cheack[1] = 0;
                    sum = 0;
                    dfs(x,y,g,n,c,m);
                    if(cheack[1] != cheack[0])
                    {
                        if(cheack[1])
                            ans[1] += sum;
                        else
                            ans[0] += sum;
                    }
                }
                else if(c == 'X')
                    ans[1]++;
                else if(c == 'O')
                    ans[0]++;

            }
        }
        printf("Black %d White %d\n",ans[1],ans[0]);
//        for(int i = 0; i < g.size(); ++i)
//            cout << g[i] << endl;
    }
    return 0;
}
