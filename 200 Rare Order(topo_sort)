//In the name of Allah , the entirely merciull , the specially mercifull
// Alhamdulillah
// DAG with Topological_sort
#include<bits/stdc++.h>
using namespace std;
stack < char > st;
void topo_sort(int i,bool *v,vector < int > vs[])
{
    v[i] = 1;
    for(int ii = 0; ii < vs[i].size(); ++ii)
    {
        int x = vs[i][ii];
        if(!v[x])
            topo_sort(x,v,vs);
    }
    st.push(i + 'A'-1);
}
int main()
{
    string str1,str2;
    while(cin >> str1)
    {
        vector < int > vs[30];
        bool dedication[28];
        memset(dedication,0,sizeof(dedication));
        int co = 0;
        while(cin >> str2)
        {
            if(str2.size() == 1 && str2[0] == '#')
                break;
            int n1 = str1.size();
            int n2 = str2.size();
            for(int i = 0; i < n1 && i < n2; ++i)
            {
                if(str1[i] != str2[i])
                {
                    if(dedication[str1[i]-'A'+1] == 0)
                        co++;
                    if(dedication[str2[i]-'A'+1] == 0)
                        co++;
                    dedication[str1[i]-'A'+1] = 1;
                    dedication[str2[i]-'A'+1] = 1;
                    vs[str1[i]-'A'+1].push_back(str2[i]-'A'+1);
                    break;
                }
            }
            str1 = str2;
        }
        bool visit[30];
        for(int i = 1; i <= 26; ++i)
        {
            string ss;
            if(dedication[i])
            {
                memset(visit,0,sizeof(visit));
                topo_sort(i,visit,vs);
                while(!st.empty())
                {
                    ss.push_back(st.top());
                    st.pop();
                }
                if(co == ss.size())
                {
                    cout << ss << endl;
                    break;
                }
            }
        }
    }
    return 0;
}
