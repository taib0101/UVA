
//I seek refused with Allah, from the accursed devil
//In the name of Allah, the entirely merciful,the specially merciful
#include<bits/stdc++.h>
using namespace std;

vector < int > solve()
{
    vector < int > pm;
    bool bl[10010] = {0};
    for(int i = 4; i <= 10000; i += 2)
        bl[i] = 1;
    for(int i = 3; (i*i) <= 10000; i += 2)
    {
        if(!bl[i])
        {
            for(int j = i+i; j <= 10000; j += i)
                bl[j] = 1;
        }
    }
    for(int i = 2; i <= 10000; ++i)
    {
        if(!bl[i])
            pm.push_back(i);
    }
    return pm;
}

int low_bound(int l,int h,int n,vector < int > pm)
{
    int mid;
    int x = -1;
    while(l < h)
    {
        mid = (l+h) / 2;
        if(pm[mid] < n)
            l = mid+1;
        else if(pm[mid] > n)
            h = mid-1;
        else
        {
            x = mid;
            l = mid+1;
        }
        //cout << "l = " << l << ", h = " << h << endl;
    }
    if(x != -1)
        return x;
    return l;
}

int main()
{
    ios_base::sync_with_stdio(false);
    cin.tie(NULL);
    int t;
    cin >> t;
    vector < int > pm = solve();
    while(t--)
    {
        int n;
        cin >> n;
        int l = 0, h = pm.size()-1;
        int x = low_bound(l,h,n,pm);
        //cout << "x = " << x << " , pm = " << pm[x] << endl;
        x = (pm[x] >= n)? x-1 : x;
        int maxx = 0;
        while(x >= 0 && n < (pm[x]*2))
            maxx = pm[x],x--;
        cout << maxx << endl;
    }
    return 0;
}
